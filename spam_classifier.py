# -*- coding: utf-8 -*-
"""spam_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vdIZm5RyKhyC4t60PwshV0FueWYwmi7I

It is spam classifier minor project using nlp

# IMPORT DATA
---
"""

import pandas as pd

messages = pd.read_csv('/content/SMSSpamCollection', sep='\t', names=["label", "message"])

print(messages)

"""# CLEANING  DATA"""

import re
import nltk
nltk.download('stopwords')

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
ps=PorterStemmer()

corpus=[]
for i in range(0, len(messages)):
    review = re.sub('[^a-zA-Z]', ' ', messages['message'][i])
    review = review.lower()
    review = review.split()
    review=[ps.stem(word) for word in review if not word in stopwords.words('english') ]
    review=' '.join(review)
    corpus.append(review)

print(corpus)

"""# BAG OF WORDS"""

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(max_features=5000)
x=cv.fit_transform(corpus).toarray()
x.shape

print(messages['label'])

y=pd.get_dummies(messages['label'])
y=y.iloc[:,1].values
print(y)

"""ham is changed into 0 and spam as 1"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.20, random_state = 0)

from sklearn.naive_bayes import MultinomialNB
spam_detect_model = MultinomialNB().fit(x_train, y_train)

y_pred=spam_detect_model.predict(x_test)

"""# SCORE OF MODEL"""

spam_detect_model.score(x_train,y_train)

spam_detect_model.score(x_test,y_test)

print(y)

print(y_pred)

y[115]

y_pred[115]